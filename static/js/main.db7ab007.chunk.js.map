{"version":3,"sources":["assets/author-img.JPG","App/ThemeSelector.js","MyPage/MyPage.js","Resume/Resume.js","App/App.js","index.js"],"names":["module","exports","ThemeSelector","setTheme","useState","isModalOpen","setIsModalOpen","handleClose","Modal","open","trigger","Button","onClick","onClose","dimmer","size","Header","Content","Description","Form","Group","widths","Select","label","options","key","text","value","placeholder","onChange","e","Actions","color","inverted","Icon","name","MyPage","React","memo","typed","typedEl","useRef","useEffect","current","Typed","startDelay","typeSpeed","backSpeed","backDelay","loop","showCursor","cursorChar","strings","className","id","ref","compact","toggle","Resume","Fragment","Grid","stackable","padded","centered","divided","Row","columns","Column","width","Image","avatar","src","myImage","verticalAlign","textAlign","List","animated","Item","href","rel","target","Label","loading","Accordion","Title","active","App","activeItem","setActiveItem","themingPageColor","setThemingPageColor","handleItemClick","container","Segment","as","Menu","Link","to","exact","path","component","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.db7ab007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/author-img.4a22663d.JPG\";","import React, { useState } from 'react'\nimport { Header, Button, Modal, Form, Icon } from 'semantic-ui-react'\nimport './App.css'\n\nconst ThemeSelector = ({ setTheme }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    const handleOpen = () => setIsModalOpen(true)\n\n    const handleClose = () => setIsModalOpen(false)\n\n    const changeTheme = (e, {value}) => {\n        setTheme(value)\n    }\n\n    const options = [\n        { key: 'blue', text: 'Blue', value: 'blue' },\n        { key: 'red', text: 'Red', value: 'red' },\n        { key: 'yellow', text: 'Yellow', value: 'yellow' },\n        { key: 'green', text: 'Green', value: 'green' }\n    ]\nreturn (\n\n<Modal open={isModalOpen} trigger={<Button onClick={handleOpen}>Change theme</Button>} onClose={handleClose} dimmer={'blurring'} size={'tiny'}>\n        <Modal.Header>Select a Theme</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Header>Customize</Header>\n            <Form>\n              <Form.Group widths='equal'>\n                <Form.Select\n                  label='Themes'\n                  options={options}\n                  placeholder='Set your Theme'\n                  onChange={changeTheme}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={handleClose} inverted>\n            <Icon name='checkmark' /> Update\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n}\n\nexport default ThemeSelector","import React, { useEffect, useRef } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport Typed from 'typed.js'\n// import Phaser from 'phaser';\n\nimport './MyPage.css'\n\n// const config = {\n//     type: Phaser.AUTO,\n//     width: 800,\n//     height: 600,\n//     physics: {\n//         default: 'arcade',\n//         arcade: {\n//             gravity: { y: 200 }\n//         }\n//     },\n//     scene: {\n//         preload: preload,\n//         create: create\n//     }\n// };\n\n// const game = new Phaser.Game(config);\n\n// function preload ()\n// {\n//     this.load.setBaseURL('http://labs.phaser.io');\n\n//     this.load.image('sky', 'assets/skies/space3.png');\n//     this.load.image('logo', 'assets/sprites/phaser3-logo.png');\n//     this.load.image('red', 'assets/particles/red.png');\n// }\n\n// function create ()\n// {\n//     this.add.image(400, 300, 'sky');\n\n//     var particles = this.add.particles('red');\n\n//     var emitter = particles.createEmitter({\n//         speed: 100,\n//         scale: { start: 1, end: 0 },\n//         blendMode: 'ADD'\n//     });\n\n//     var logo = this.physics.add.image(400, 100, 'logo');\n\n//     logo.setVelocity(100, 200);\n//     logo.setBounce(1, 1);\n//     logo.setCollideWorldBounds(true);\n\n//     emitter.startFollow(logo);\n// }\n\nconst MyPage = React.memo(() => {\n    let typed;\n    const typedEl = useRef(null)\n\n    useEffect(() => {\n        if(typedEl.current) {\n            // eslint-disable-next-line\n            typed = new Typed(\"#typedDemo\", {\n                startDelay: 1000,\n                typeSpeed: 70,\n                backSpeed: 30,\n                backDelay: 70,\n                loop: true,\n                showCursor: true,\n                cursorChar: '_',\n                strings:[\n                'This page is under construction... ^500',\n                'But you can always enjoy ^500',\n                '<strong>This animation</strong> ^1000'\n                ]\n            });\n        }\n    },[typedEl]);\n    \n    return(\n        <div className=\"myPageWrapper\">\n            <span id=\"typedDemo\" className=\"typedDemo\" ref={typedEl}></span>\n            <section>\n                <Button compact onClick={() => typed.toggle()}>Toggle Animation</Button>\n            </section>\n            \n        </div>\n    )\n});\n\nexport default MyPage;","import React from 'react'\nimport { Image, List, Grid, Label, Icon, Accordion } from 'semantic-ui-react'\nimport myImage from '../assets/author-img.JPG'\nimport './Resume.css'\n\nconst Resume = React.memo(({ color }) => {\n    return(\n        <React.Fragment>\n            <Grid stackable padded centered divided='vertically'>\n                <Grid.Row columns={2}>\n                    <Grid.Column width={5}>\n                        <Image avatar src={myImage} size='small'/>\n                    </Grid.Column>\n                    <Grid.Column verticalAlign='middle' width={5} textAlign='left'>\n                        <List animated size='large'>\n                            <List.Item>\n                                <List.Icon name='user' color={color}/>\n                                <List.Content>\n                                    Feroz Damani\n                                </List.Content>\n                            </List.Item>\n                            <List.Item>\n                                <List.Icon name='marker' color={color}/>\n                                <List.Content>San Francisco, CA</List.Content>\n                            </List.Item>\n                            <List.Item>\n                                <List.Icon name='mail' color={color}/>\n                                <List.Content>\n                                    <a href='mailto:ferozdamani13@gmail.com'>ferozdamani13@gmail.com</a>\n                                </List.Content>\n                            </List.Item>\n                            <List.Item>\n                                <List.Icon name='linkify' color={color}/>\n                                <List.Content>\n                                    <a href='https://github.com/ferozdamani' rel=\"noopener noreferrer\" target='_blank'>GitHub Profile</a>\n                                </List.Content>\n                            </List.Item>\n                        </List>  \n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={10} textAlign='center'>\n                    <Label.Group size='big'>\n                        <Label><Icon name='js' size='big' color='green'/>Javascript</Label>\n                        <Label><Icon name='html5' size='big' color='orange'/>HTML</Label>\n                        <Label><Icon name='css3' size='big' color='red'/>CSS</Label>\n                        <Label><Icon name='react' size='big' color='blue' loading/>ReactJs</Label>\n                        <Label><Icon name='npm' size='big' color='black'/>npm</Label>\n                    </Label.Group>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <h2>Work Experience</h2>\n            <Accordion>\n                <Accordion.Title>\n                    Wells Fargo &amp; Co.\n                </Accordion.Title>\n                <Accordion.Content active={true}>\n                    I have worked on Multiple projects at Wells Fargo. Executing various job responsibilities.\n                </Accordion.Content>\n            </Accordion>\n        </React.Fragment>\n    )\n});\n\nexport default Resume;","import React, { useState } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { Menu, Grid, Header, Segment } from 'semantic-ui-react'\nimport './App.css'\nimport ThemeSelector from './ThemeSelector'\nimport MyPage from \"../MyPage/MyPage\"\nimport Resume from \"../Resume/Resume\"\n\nfunction App() {\n  const [activeItem, setActiveItem] = useState('myPage')\n  const [themingPageColor, setThemingPageColor] = useState('blue')\n  \n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  }\n\nconst showThemedPage = (color) => {\n  return (\n    <Grid centered verticalAlign='middle' container >\n      <Grid.Row>\n        <Grid.Column width={12} textAlign='center'>\n        <Segment inverted textAlign='center'>\n          <Header as='h1' inverted color={color}>\n            <div>Feroz Damani</div>\n            <div>Frontend Engineer</div>\n          </Header>\n        </Segment>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={8} textAlign='center'>\n        <Menu stackable inverted widths={2} color={color}>\n            <Menu.Item\n              name='myPage'\n              active={activeItem === 'myPage'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/'}\n            >\n              <strong>Home</strong>\n            </Menu.Item>\n\n            <Menu.Item\n              name='resume'\n              active={activeItem === 'resume'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/my-resume'}\n            >\n              <strong>Resume</strong>\n            </Menu.Item>\n          </Menu>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={12}>\n          <Switch>\n            <Route exact path='/' component={MyPage} />\n            <Route exact path='/my-resume' render={(props) => <Resume {...props} color={color} />}/>\n            <Route render={function () {\n              return <p>Not found</p>\n            }} />\n          </Switch>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n  return (\n    <div className=\"App\">\n      <ThemeSelector setTheme={setThemingPageColor} />\n      {showThemedPage(themingPageColor)}\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from \"./App/App\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'))\n\n"],"sourceRoot":""}