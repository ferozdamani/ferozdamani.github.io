{"version":3,"sources":["App/ThemeSelector.js","MyPage/MyPage.js","Resume/Resume.js","App/App.js","index.js"],"names":["ThemeSelector","setTheme","useState","isModalOpen","setIsModalOpen","handleClose","Modal","open","trigger","Button","onClick","onClose","dimmer","size","Header","Content","Description","Form","Group","widths","Select","label","options","key","text","value","placeholder","onChange","e","Actions","color","inverted","Icon","name","MyPage","React","memo","className","Resume","App","activeItem","setActiveItem","themingPageColor","setThemingPageColor","handleItemClick","Grid","centered","verticalAlign","container","Row","Column","width","textAlign","Segment","as","Menu","stackable","Item","active","Link","to","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b3bd40d0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Header, Button, Modal, Form, Icon } from 'semantic-ui-react'\nimport './App.css'\n\nconst ThemeSelector = ({ setTheme }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    const handleOpen = () => setIsModalOpen(true)\n\n    const handleClose = () => setIsModalOpen(false)\n\n    const changeTheme = (e, {value}) => {\n        setTheme(value)\n    }\n\n    const options = [\n        { key: 'blue', text: 'Blue', value: 'blue' },\n        { key: 'red', text: 'Red', value: 'red' },\n        { key: 'yellow', text: 'Yellow', value: 'yellow' },\n        { key: 'green', text: 'Green', value: 'green' }\n    ]\nreturn (\n\n<Modal open={isModalOpen} trigger={<Button onClick={handleOpen}>Change theme</Button>} onClose={handleClose} dimmer={'blurring'} size={'tiny'}>\n        <Modal.Header>Select a Theme</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Header>Customize</Header>\n            <Form>\n              <Form.Group widths='equal'>\n                <Form.Select\n                  label='Themes'\n                  options={options}\n                  placeholder='Set your Theme'\n                  onChange={changeTheme}\n                />\n              </Form.Group>\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={handleClose} inverted>\n            <Icon name='checkmark' /> Update\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n}\n\nexport default ThemeSelector","import React from 'react'\n\nimport './MyPage.css'\n\nconst MyPage = React.memo(() => {\n\n    return(\n        <div className=\"myPageWrapper\">\n            Test Content\n        </div>\n    )\n});\n\nexport default MyPage;","import React from 'react'\nconst Resume = React.memo(() =>{\n    return(\n        <div>\n            This will be my Work Experience page\n        </div>\n    )\n});\n\nexport default Resume;","import React, { useState } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { Menu, Grid, Header, Segment } from 'semantic-ui-react'\nimport './App.css'\n// import logo from '../fd-logo.svg'\nimport ThemeSelector from './ThemeSelector'\nimport MyPage from \"../MyPage/MyPage\"\nimport Resume from \"../Resume/Resume\"\n\nfunction App() {\n  const [activeItem, setActiveItem] = useState('myPage')\n  const [themingPageColor, setThemingPageColor] = useState('blue')\n  \n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  }\n\nconst showThemedPage = (color) => {\n  return (\n    <Grid centered verticalAlign='middle' container={true}>\n      <Grid.Row>\n        <Grid.Column width={12} textAlign='center'>\n        <Segment inverted textAlign='center'>\n          <Header as='h1' inverted color={color}>\n            Feroz Damani\n          </Header>\n        </Segment>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={8} textAlign='center'>\n        <Menu stackable inverted widths={2} color={color}>\n            <Menu.Item\n              name='myPage'\n              active={activeItem === 'myPage'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/'}\n            >\n              Home\n            </Menu.Item>\n\n            <Menu.Item\n              name='resume'\n              active={activeItem === 'resume'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/my-resume'}\n            >\n              Resume\n            </Menu.Item>\n          </Menu>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={14} textAlign='center'>\n          <Switch>\n            <Route exact path='/' component={MyPage} />\n            <Route exact path='/my-resume' component={Resume} />\n            <Route render={function () {\n              return <p>Not found</p>\n            }} />\n          </Switch>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n  return (\n    <div className=\"App\">\n      <ThemeSelector setTheme={setThemingPageColor} />\n      {showThemedPage(themingPageColor)}\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from \"./App/App\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'))\n\n"],"sourceRoot":""}